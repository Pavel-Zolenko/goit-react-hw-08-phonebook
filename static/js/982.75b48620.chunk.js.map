{"version":3,"file":"static/js/982.75b48620.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","redux/contacts/selectors.js","components/App/App.styled.js","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormContact = styled(Form)`\n  margin-bottom: 30px;\n  padding: 10px;\n  border: 2px solid #000000;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n`;\n\nexport const Input = styled(Field)`\n  margin-top: 10px;\n  padding: 5px;\n  width: 200px;\n  color: #0000ff;\n  border: 1px solid #9ba2a8;\n  font-size: 16px;\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 5px 2px #9ba2a8;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const AddBtn = styled.button`\n  padding: 5px 20px;\n  display: inline;\n  align-items: center;\n  text-align: center;\n  font-family: inherit;\n  font-size: 16px;\n  border: 2px solid #9ba2a8;\n  border-radius: 5px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 250ms ease, box-shadow 250ms ease;\n  :hover,\n  :focus {\n    background-color: #b2b2ed;\n    box-shadow: 0px 4px 10px 4px #9ba2a8;\n  }\n`;","import * as yup from 'yup';\nimport 'yup-phone';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport { addContact} from \"redux/contacts/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nimport {\n  FormContact,\n  FormLabel,\n  Input,\n  ErrorText,\n  AddBtn,\n} from './ContactForm.styled';\n\nlet schema = yup.object().shape({\n  name: yup.string().min(3).required(),\n  number: yup.string().phone('UA').required(),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts)\n \n  const handleSubmit = (values, { resetForm }) => {\n    if (contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    )\n    ) {\n      alert(`${values.name} is already in contacts.`);\n      return;\n    }\n     dispatch(addContact(values));\n    \n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormContact>\n        <FormLabel htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Name\"\n            required\n          />\n          <FormError name=\"name\" />\n        </FormLabel>\n       \n        <FormLabel htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Number\"\n            required\n          />\n          <FormError name=\"number\" />\n        </FormLabel>\n        <AddBtn type=\"submit\">Add contact</AddBtn>\n      </FormContact>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  border: 1px solid #9ba2a8;\n  font-size: 18px;\n  font-weight: 500;\n  :not(:last-child) {\n    border-bottom: none;\n  }\n`;\n\nexport const Number = styled.span`\n  margin-left: auto;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 40px;\n  padding: 0px 20px;\n  display: inline;\n  align-items: center;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  border: 2px solid #9ba2a8;\n  border-radius: 5px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 250ms ease, box-shadow 250ms ease;\n  :hover,\n  :focus {\n    background-color: #e26565;\n    box-shadow: 0px 4px 10px 4px #9ba2a8;\n  }\n`;","import { PropTypes } from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { Item, Number, DeleteBtn } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number, phone }) => {\n  \n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      <span>{name}: </span>\n      <Number>{number || phone }</Number>\n      <DeleteBtn type=\"button\"  onClick={handleDelete}>\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n};","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem';\n\nexport const ContactList = () => {\n  \n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.filter);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <ul>\n      {filteredContacts\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .map(({ id, name, phone, number }) => (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            phone={phone}\n            number={number}\n          />\n        ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 5px;\n  font-size: 18px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px;\n  color: #1f6451;\n  border: 1px solid #9ba2a8;\n  font-size: 16px;\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 5px 2px #9ba2a8;\n  }\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/filterSlice';\n\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n    const handleFilter = event => {\n      dispatch(filterChange(event.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel htmlFor=\"filter\">\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        placeholder=\"Put the name for search\"\n      />\n    </FilterLabel>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"msgText\":\"Notification_msgText__Ij0Ua\"};","import PropTypes from 'prop-types';\nimport css from './Notification.module.css';\n\nexport function Notification({ msg }) {\n  return <p className={css.msgText}>{msg}</p>;\n}\n\nNotification.propTypes = {\n  msg: PropTypes.string.isRequired,\n};","export const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getStatusFilter = state => state.filter;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 35px;\n  width: 450px;\n  color: #010101;\n  background-color: #f1ffff;\n  box-shadow: 0px 4px 10px 4px #9ba2a8;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 36px;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-bottom: 15px;\n  font-size: 28px;\n`;\n\nexport const FilterText = styled.p`\n  color: #330101;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const ContactText = styled.p`\n  color: #330101;\n  font-size: 20px;\n  font-weight: 500;\n`;","import { Toaster } from 'react-hot-toast';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Notification } from 'components/Notification/Notification';\nimport { getError, getIsLoading } from \"redux/contacts/selectors\";\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport {\n  Container,\n  Title,\n  SubTitle,\n} from 'components/App/App.styled.js';\n\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.filter);\n\n\n\n useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    \n      \n    <Container>\n      <Toaster position=\"top-center\" reverseOrder={false} />\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <SubTitle>Contacts</SubTitle>\n      {contacts.length > 0 || filter ? (\n        <Filter />\n      ) : (\n        <Notification msg=\"No contacts added\" />\n      )}\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </Container>\n      \n  );\n}\n"],"names":["FormContact","styled","Form","FormLabel","Input","Field","ErrorText","AddBtn","schema","yup","shape","name","min","required","number","phone","FormError","render","message","initialValues","ContactForm","dispatch","useDispatch","contacts","useSelector","state","validationSchema","onSubmit","values","resetForm","some","contact","toLowerCase","alert","addContact","htmlFor","type","pattern","title","placeholder","Item","Number","DeleteBtn","ContactItem","id","onClick","deleteContact","ContactList","normalizedFilter","filter","filteredContacts","includes","sort","a","b","localeCompare","map","FilterLabel","FilterInput","Filter","value","onChange","event","filterChange","currentTarget","Notification","msg","className","css","getIsLoading","isLoading","getError","error","Container","Title","SubTitle","ContactsPage","useEffect","fetchContacts","position","reverseOrder","length"],"sourceRoot":""}